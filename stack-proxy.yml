# simple proxy example using traefik single container
# for a more full-featured solution with multi-node proxy,
# HA, consul backend, and more, see stack-proxy-global.yml

version: '3.7'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "1m"
  # driver: "gelf"
  # options:
  #   gelf-address: "udp://127.0.0.1:5000"
  
services:
  traefik:
    <<: *default-opts
    image: traefik:2.2
    command:
     - --providers.docker
     - --providers.docker.swarmMode
     - --providers.docker.network=proxy
     - --providers.docker.watch
     - --api
     - --entryPoints.web.address=:80
     - --entrypoints.web.http.redirections.entryPoint.to=websecure
     - --entrypoints.web.http.redirections.entryPoint.scheme=https
     - --entryPoints.websecure.address=:443
     - --entrypoints.websecure.http.tls=true
     - --entrypoints.websecure.http.tls.certresolver=letsencrypt
     - --certificatesResolvers.letsencrypt.acme.email=doniakeu@gmail.com
     - --certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
     - --certificatesResolvers.letsencrypt.acme.tlsChallenge=true
     - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
     - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
    ports:
     - 80:80
     - 443:443
    volumes:
     - proxy_acme:/etc/traefik/acme
     - /var/run/docker.sock:/var/run/docker.sock
    networks:
     - proxy
    deploy:
      labels:
        traefik.http.routers.api.rule: Host(`traefik.arepa.space`)
        traefik.http.routers.api.tls: 'true'
        traefik.http.routers.api.middlewares: auth
        traefik.http.services.api-dummy.loadbalancer.server.port: '8080'
        traefik.http.routers.api.tls.certresolver: letsencrypt
        traefik.http.routers.api.service: api@internal
        traefik.http.middlewares.auth.basicauth.users: doniakeu:$apr1$ybBcV/jI$wPSz4OrBqsl6C3B8kLg4y1,hmedcab:$apr1$ybBcV/jI$wPSz4OrBqsl6C3B8kLg4y1
        traefik.http.routers.api.entryPoints: websecure
        traefik.enable: 'true'
      placement:
        constraints:
         - node.role == manager
networks:
  proxy:
    external: true
volumes:
  proxy_acme:
    external: true
